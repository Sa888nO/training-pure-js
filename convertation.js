// typeof - проверяет тип переменной пример вывода "number"
// можно проверять отдельно пример Number.isInteger(value)

Number(); // перобразование в число унарный + так же преобразует в число
// undefined -> NaN
// null -> 0
// true -> 1 / false -> 0
// "123" -> 123 / "1a2" -> NaN

// если в опирации есть строка все будет приводиться к строке
// если есть число все будет приводиться к числу
// при делении числа приводятся к float

// String([(возможны числа)]) - будет пытаться преобразовать в строку
// String({}) - [object Object]

// конвертация в Boolean
// 0, "", null, undefined, NaN = false / остальные = true

/* преобразование объектов в примитивы */
//можно явно настроить для различных выводов:
let user = {
  name: "John",
  money: 1000,
  toString() {
    return `{name: "${this.name}"}`;
  },
  valueOf() {
    return this.money;
  },
};
alert(user); // toString -> {name: "John"} // [obj obj] если не переопределять хинт стринга
alert(+user); // valueOf -> 1000
alert(user + 500); // valueOf -> 1500

let obj = {
  // toString обрабатывает все преобразования в случае отсутствия других методов
  toString() {
    return "2";
  },
};
alert(obj * 2); // 4, объект был преобразован к примитиву "2", затем умножение сделало его числом
// бывает достаточно реализовать только obj.toString() в качестве универсального метода для преобразований к строке
